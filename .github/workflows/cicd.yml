on:
  workflow_dispatch:
  push:
    branches:
      - main
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
      - closed

env:
  IMAGE: ghcr.io/${{ github.repository }}:${{ github.sha }}-${{ github.run_id }}

jobs:
  check-types:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 22.x
      - run: npm ci
      - run: npm run check:types
  check-format:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 22.x
      - run: npm ci
      - run: npm run check:format
  containerize:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-buildx-action@v3
      - uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - uses: docker/build-push-action@v6
        with:
          push: true
          tags: ${{ env.IMAGE }}
          platforms: linux/amd64,linux/arm64
  deploy-review:
    if: ${{ github.event.action != 'closed' }}
    needs: containerize
    runs-on: self-hosted
    environment:
      name: review/pr-${{ github.event.pull_request.number }}
      url: https://example-app-pr-${{ github.event.pull_request.number }}.homelabx.uk
    steps:
      - uses: actions/checkout@v4
      - run: helm upgrade --install --atomic --timeout 300s --create-namespace -n ${{ github.event.repository.name }} --set image="${{ env.IMAGE }}" ${{ github.event.repository.name }}-pr-${{ github.event.pull_request.number }} ./chart
  destroy-review:
    if: ${{ github.event.action == 'closed' }}
    runs-on: self-hosted
    steps:
      - run: helm uninstall --wait ${{ github.event.repository.name }}-pr-${{ github.event.pull_request.number }}
  deploy-prod:
    if: ${{ github.ref_name == 'main' }}
    needs: containerize
    runs-on: self-hosted
    environment:
      name: prod
      url: https://example-app.homelabx.uk
    steps:
      - uses: actions/checkout@v4
      - run: helm upgrade --install --atomic --timeout 300s --create-namespace -n ${{ github.event.repository.name }} --set image="${{ env.IMAGE }}" ${{ github.event.repository.name }} ./chart
